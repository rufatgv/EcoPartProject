@model Product

@{
    ViewData["Title"] = "Edit";
}

<div class="page-header">
    <div class="row align-items-end">
        <div class="col-lg-8">
            <div class="page-header-title">
                <div class="d-inline">
                    <h4>Brands</h4>
                    <span>
                        Butun brandlar
                    </span>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="page-header-breadcrumb">
                <ul class="breadcrumb-title">
                    <li class="breadcrumb-item" style="float: left;">
                        <a asp-controller="dashboard" asp-action="index"> <i class="feather icon-home"></i> </a>
                    </li>
                    <li class="breadcrumb-item" style="float: left;">
                        <a href="#!">Brendler</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>
<div class="page-body">
    <div class="card p-3">
        <div class="card-block">
            <form class="row" asp-action="Create" enctype="multipart/form-data" id="productCreate">
                <div class="form-groupImage">
                    <label for="file1" class="control-label">Image</label>
                    <label for="file" class="photo-viewer" id="file-viewer" style="background-image:url('/uploads/images/@Model.ImagePath')"></label>
                    <input name="file" id="file" type="file" class="form-control" onchange="readFile(this)" />
                    <input type="hidden" asp-for="ImagePath" />
                    <span asp-validation-for="ImagePath" class="text-danger"></span>
                </div>
                <div class="col-12 col-lg-6">
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                <label asp-for="Name" class="control-label"></label>
                                <input asp-for="Name" class="form-control" />
                            </div>
                        </div>
                        <div class="col-12 col-lg-6">
                            <div class="form-group">
                                <label asp-for="CategoryId" class="control-label"></label>
                                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label asp-for="Price" class="control-label"></label>
                                <input asp-for="Price" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12">
                    <div class="tab-control" role="tabcontrol">
                        <div class="tab-page" id="specifications" aria-title="Xususiyyetler" selected>
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Mehsul Kodu</th>
                                        <th>Dəyər</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var code in ViewBag.Codes)
                                    {
                                        <tr class="code-checkbox">
                                            <td class="table-row-select">
                                                <input type="checkbox" data-code-id="@code.Id" />
                                            </td>
                                            <th>
                                                <p id="code-@code.Id">@code.Name</p>

                                            </th>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-12">
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-success" />
                        <a asp-action="Index" class="btn btn-primary">Back to List</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>



@section css{
    <link rel="stylesheet" type="text/css" href="~/libs/multiple-imager-js/css/imager.css">
    <link rel="stylesheet" type="text/css" href="~/libs/tab-control/tab-control.css">


}

@section js{
    <script src="~/libs/multiple-imager-js/js/imager.js"></script>
    <script src="~/libs/tab-control/tab-control.js"></script>
    <script>

        const selectColors = `@Html.DropDownList("ColorId",@ViewBag.Colors,null,htmlAttributes:new {
                @class="form-control select2",
                id="#s1#"
                })`;
        const selectSizes = `@Html.DropDownList("SizeId",@ViewBag.Sizes,null,htmlAttributes:new {
                @class="form-control select2",
                id="#s2#"
                })`;

        $(document).ready(function () {


            $('#viewer1').imgadd({
                tnWidth: '120px',
                tnHeight: '120px',
                fontSize: '55px',
                plusInnerHtml: '',
                plusBtnClass: undefined
            });

            $('#pricing select').each(function (index, item) {
                let selectedId = $(item).attr('selected-id');
                $(item).val(selectedId).trigger('change');

            });




            $('#productCreate').submit(function (e) {

                e.preventDefault();
                const btn = $(e.currentTarget).find('input[type=submit]');

                $(btn).attr('disable', 'disabled');

                let formData = new FormData(e.currentTarget);

                let indexer = 0;
                $('input[data-specification-id]').each(function (index, item) {
                    const id = $(item).data('specification-id');
                    const value = $(item).val();


                    if (value.length == 0)
                        return;
                    console.log(id, value);

                    formData.set(`Specification[${indexer}].Id`, id);
                    formData.set(`Specification[${indexer}].Value`, value);
                    indexer++;
                });

                let pricing = [];
                $('#pricing tbody tr').each(function (index, item) {
                    const colorId = $(item).find('td:nth-child(1) select').val();
                    const sizeId = $(item).find('td:nth-child(2) select').val();
                    const value = $(item).find('td:nth-child(3) input').val();

                    const filtered = pricing.filter((pItem) => {
                        return pItem.colorId == colorId && pItem.sizeId == sizeId;
                    });
                    if (filtered.length > 0) {
                        return;
                    }
                    pricing.push({
                        colorId: colorId,
                        sizeId: sizeId,
                        price: value
                    });
                });
                $(pricing).each(function (index,item) {
                    formData.set(`Pricing[${index}].SizeId`, item.sizeId);
                    formData.set(`Pricing[${index}].ColorId`, item.colorId);
                    formData.set(`Pricing[${index}].Price`, item.price);
                });
                /*

                  */
                $.ajax({
                    url: '@Url.Action("Edit")',
                    type: 'post',
                    data: formData,
                    contentType: false,
                    processData: false,
                    beforeSent: function (xhr) {

                    },
                    success: function (response) {
                        if (response.error == undefined) {
                            let errors = response.errors.map(err => {
                                return {
                                    propertyName: err.propertyName,
                                    errorMessage: err.errorMessage
                                };
                            });

                            showErrors(errors);
                            return;
                        }
                        else if (response.error == true) {
                            toastr.error(response.message, "Xəta!");
                            $(btn).removeAttr('disable');
                            return;
                        }

                        e.currentTarget.reset();
                        toastr.success(response.message, "Ugur");
                        location.href = `@Url.Action("Index")`;
                    },
                    error: function (response) {
                        $(btn).removeAttr('disable');
                        console.warn(response);
                    }
                })
                    .always(function () {

                    });
            });

        });



        function showErrors(errors) {
            errors = errors.filter(function (item, index, arr) {
                return arr.map(a => a.propertyName).indexOf(item.propertyName) == index;
            });

            console.log(errors);
            $(`#productCreate span.error`).html('');

            $(errors).each(function (index, item) {

                const el = $(`#productCreate input[name="${item.propertyName}"]`);
                $(el).focus(function () {
                const elError = el.next();
                    elError.html('');
                });
                let spanError = $(el).next('span.error');

                if (spanError.length == 0) {
                    spanError = $('<span/>', {
                        class: 'error',
                        style: 'color: crimson',
                        html: item.errorMessage
                    });

                    $(spanError).insertAfter(el);
                }
                else {
                    $(spanError).html(item.errorMessage);
                }




            });
        }

        function blurring(errors) {
            $(`#productCreate input[name=""]`).focus(function (item) {
                $(`#productCreate span.error`).html('');
            });

        }



        function createPricing(e) {




            e.preventDefault();

            const tBody = $(e.currentTarget).closest('table').find('tbody');
            const tr = $(`<tr>
                            <td>${(selectColors.replace('#s1#',  newid()))}</td>
                            <td>${(selectSizes.replace('#s2#',  newid()))}</td>
                            <td><input type="text"/></td>
                            </tr>`);


            $(tr).find('.select2').each(function (index, item) {
                $(item).select2();
            })


            $(tBody).append(tr);

        }

        function removePricing(e) {
            if ($(e.currentTarget).closest('tbody').find('tr').length == 1)
                return;

            $(e.currentTarget).closest('tr').remove();
        }

        function newid() {
            return "s"+'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }
    </script>
}

